// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	context "context"
	reflect "reflect"

	entity "github.com/egor-denisov/wallet-rielta/internal/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockWallet is a mock of Wallet interface.
type MockWallet struct {
	ctrl     *gomock.Controller
	recorder *MockWalletMockRecorder
}

// MockWalletMockRecorder is the mock recorder for MockWallet.
type MockWalletMockRecorder struct {
	mock *MockWallet
}

// NewMockWallet creates a new mock instance.
func NewMockWallet(ctrl *gomock.Controller) *MockWallet {
	mock := &MockWallet{ctrl: ctrl}
	mock.recorder = &MockWalletMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWallet) EXPECT() *MockWalletMockRecorder {
	return m.recorder
}

// CreateNewWalletWithDefaultBalance mocks base method.
func (m *MockWallet) CreateNewWalletWithDefaultBalance(ctx context.Context) (*entity.Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewWalletWithDefaultBalance", ctx)
	ret0, _ := ret[0].(*entity.Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNewWalletWithDefaultBalance indicates an expected call of CreateNewWalletWithDefaultBalance.
func (mr *MockWalletMockRecorder) CreateNewWalletWithDefaultBalance(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewWalletWithDefaultBalance", reflect.TypeOf((*MockWallet)(nil).CreateNewWalletWithDefaultBalance), ctx)
}

// GetWalletByID mocks base method.
func (m *MockWallet) GetWalletByID(ctx context.Context, walletID string) (*entity.Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWalletByID", ctx, walletID)
	ret0, _ := ret[0].(*entity.Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWalletByID indicates an expected call of GetWalletByID.
func (mr *MockWalletMockRecorder) GetWalletByID(ctx, walletID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWalletByID", reflect.TypeOf((*MockWallet)(nil).GetWalletByID), ctx, walletID)
}

// GetWalletHistoryByID mocks base method.
func (m *MockWallet) GetWalletHistoryByID(ctx context.Context, walletID string) ([]entity.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWalletHistoryByID", ctx, walletID)
	ret0, _ := ret[0].([]entity.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWalletHistoryByID indicates an expected call of GetWalletHistoryByID.
func (mr *MockWalletMockRecorder) GetWalletHistoryByID(ctx, walletID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWalletHistoryByID", reflect.TypeOf((*MockWallet)(nil).GetWalletHistoryByID), ctx, walletID)
}

// SendFunds mocks base method.
func (m *MockWallet) SendFunds(ctx context.Context, from, to string, amount uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendFunds", ctx, from, to, amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendFunds indicates an expected call of SendFunds.
func (mr *MockWalletMockRecorder) SendFunds(ctx, from, to, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendFunds", reflect.TypeOf((*MockWallet)(nil).SendFunds), ctx, from, to, amount)
}

// MockWalletGateway is a mock of WalletGateway interface.
type MockWalletGateway struct {
	ctrl     *gomock.Controller
	recorder *MockWalletGatewayMockRecorder
}

// MockWalletGatewayMockRecorder is the mock recorder for MockWalletGateway.
type MockWalletGatewayMockRecorder struct {
	mock *MockWalletGateway
}

// NewMockWalletGateway creates a new mock instance.
func NewMockWalletGateway(ctrl *gomock.Controller) *MockWalletGateway {
	mock := &MockWalletGateway{ctrl: ctrl}
	mock.recorder = &MockWalletGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWalletGateway) EXPECT() *MockWalletGatewayMockRecorder {
	return m.recorder
}

// CreateNewWalletWithBalance mocks base method.
func (m *MockWalletGateway) CreateNewWalletWithBalance(ctx context.Context, balance uint) (*entity.Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewWalletWithBalance", ctx, balance)
	ret0, _ := ret[0].(*entity.Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNewWalletWithBalance indicates an expected call of CreateNewWalletWithBalance.
func (mr *MockWalletGatewayMockRecorder) CreateNewWalletWithBalance(ctx, balance interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewWalletWithBalance", reflect.TypeOf((*MockWalletGateway)(nil).CreateNewWalletWithBalance), ctx, balance)
}

// GetWalletByID mocks base method.
func (m *MockWalletGateway) GetWalletByID(ctx context.Context, walletID string) (*entity.Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWalletByID", ctx, walletID)
	ret0, _ := ret[0].(*entity.Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWalletByID indicates an expected call of GetWalletByID.
func (mr *MockWalletGatewayMockRecorder) GetWalletByID(ctx, walletID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWalletByID", reflect.TypeOf((*MockWalletGateway)(nil).GetWalletByID), ctx, walletID)
}

// GetWalletHistoryByID mocks base method.
func (m *MockWalletGateway) GetWalletHistoryByID(ctx context.Context, walletID string) ([]entity.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWalletHistoryByID", ctx, walletID)
	ret0, _ := ret[0].([]entity.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWalletHistoryByID indicates an expected call of GetWalletHistoryByID.
func (mr *MockWalletGatewayMockRecorder) GetWalletHistoryByID(ctx, walletID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWalletHistoryByID", reflect.TypeOf((*MockWalletGateway)(nil).GetWalletHistoryByID), ctx, walletID)
}

// SendFunds mocks base method.
func (m *MockWalletGateway) SendFunds(ctx context.Context, from, to string, amount uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendFunds", ctx, from, to, amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendFunds indicates an expected call of SendFunds.
func (mr *MockWalletGatewayMockRecorder) SendFunds(ctx, from, to, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendFunds", reflect.TypeOf((*MockWalletGateway)(nil).SendFunds), ctx, from, to, amount)
}
